generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Mesas {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre String   @unique

  mesas_actuales Mesa_actual[]

  area_id String? @db.ObjectId
  area    Area?   @relation(fields: [area_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Roles {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  nombre   String     @unique
  usuarios Usuario[]
  permisos Permiso[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Permisos {
  id     String   @id @default(auto()) @map("_id") @db.ObjectId
  entidad String
  handler String
  activo  Boolean  @default(false)

  rol_id String   @db.ObjectId
  rol    Rol      @relation(fields: [rol_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Usuarios {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre   String
  apellido String
  email    String
  clave    String
  activo   Boolean  @default(false)

  mesas_actuales Mesa_actual[]
  tickets        Ticket[]

  rol_id String  @db.ObjectId
  rol    Rol     @relation(fields: [rol_id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Estado {
  ABIERTA
  CERRADA
  ANULADA
}

model Mesas_actuales {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre     String   @unique
  comensales Int
  estado     Estado   @default(ABIERTA)

  mesa_id    String   @db.ObjectId
  mesa       Mesa     @relation(fields: [mesa_id], references: [id])

  usuario_id String   @db.ObjectId
  usuario    Usuario  @relation(fields: [usuario_id], references: [id])

  ticket     Ticket?

  productos  Mesa_productos[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Mesas_productos {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId

  mesa_id      String         @db.ObjectId
  mesa         Mesa_actual    @relation(fields: [mesa_id], references: [id], onDelete: Cascade)

  producto_id  String         @db.ObjectId
  producto     Producto       @relation(fields: [producto_id], references: [id])

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

model Productos {
  id                String            @id @default(auto()) @map("_id") @db.ObjectId
  nombre            String
  descripcion       String?
  nota              String?
  precio            Float
  costo             Float
  tiempo_elaboracion Int?

  tipo_id           String            @db.ObjectId
  subtipo_id        String?           @db.ObjectId

  productos         Mesa_productos[]
  tipo_producto     Tipo_producto     @relation(fields: [tipo_id], references: [id])
  sutipo_producto   Subtipo_producto? @relation(fields: [subtipo_id], references: [id])

  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model Tipos_productos {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  nombre    String
  producto  Producto[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Subtipos_productos {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  nombre    String
  producto  Producto[]

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Tickets {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  total           Int

  usuario_id      String   @db.ObjectId
  usuario         Usuario  @relation(fields: [usuario_id], references: [id])

  mesa_actual_id  String   @unique @db.ObjectId
  mesa            Mesa_actual @relation(fields: [mesa_actual_id], references: [id])

  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Areas {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  nombre     String?
  color      String?
  usuario_id String?   @db.ObjectId
  mesas      Mesa[]

  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
